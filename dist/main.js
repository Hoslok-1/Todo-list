(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),i=t.n(r)()(o());i.push([n.id,"*{\n    margin:0;\n    padding: 0;\n}\n\nbody{\n  position: fixed;\n}\n\nul{\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    gap:6vh;\n    padding:20px;\n    text-align: center;\n}\n\nnav{\n    height: 100vh;\n    background-color: rgb(123, 182, 230);\n}\n\n.navBarClass\n{\n  width:35vh;\n}\n\n.container\n{\n  display: flex;\n}\n\n\n.rightTemplate\n{\n  width:350vh;\n  background-color: beige;\n}\n\n\n.navBarLine\n{\n  border:1px solid black;\n  width:40vh;\n}\n\n#popUp\n{\n  display: none;\n  margin-left: 650px;\n  margin-top: 300px;\n  border:2px solid black;\n  max-width: 60vh;\n  position: relative;\n  padding:20px;\n}\n\n#blurredPopUp\n{\n  transition-duration: 0.2s;\n  filter: blur(8px);\n  -webkit-filter: blur(8px);\n  position: fixed;\n}\n\n.addTask\n{\n  display: flex;\n  flex-direction: column;\n  gap:15px;\n}\n\n\n.titleInput\n{\n  width: 50vh;\n}\n.descInput\n{\n  width:50vh;\n  height:50px;\n}\n.dueDateInput\n{\n  width:50vh;\n}\n\n\n.popUpButtons\n{\n  display: flex;\n  justify-content: center;\n  gap:30px;\n}\n\n\n\n\n.addProject {\n\n  appearance: none;\n  background-color: #2ea44f;\n  border: 1px solid rgba(27, 31, 35, .15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, .1) 0 1px 0;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n\n.addProject:focus:not(:focus-visible):not(.focus-visible) {\n  box-shadow: none;\n  outline: none;\n}\n\n.addProject:hover {\n  background-color: #2c974b;\n}\n\n.addProject:focus {\n  box-shadow: rgba(46, 164, 79, .4) 0 0 0 3px;\n  outline: none;\n}\n\n.addProject:disabled {\n  background-color: #94d3a2;\n  border-color: rgba(27, 31, 35, .1);\n  color: rgba(255, 255, 255, .8);\n  cursor: default;\n}\n\n.addProject:active {\n  background-color: #298e46;\n  box-shadow: rgba(20, 70, 32, .2) 0 1px 0 inset;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,QAAQ;IACR,UAAU;AACd;;AAEA;EACE,eAAe;AACjB;;AAEA;IACI,qBAAqB;IACrB,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,oCAAoC;AACxC;;AAEA;;EAEE,UAAU;AACZ;;AAEA;;EAEE,aAAa;AACf;;;AAGA;;EAEE,WAAW;EACX,uBAAuB;AACzB;;;AAGA;;EAEE,sBAAsB;EACtB,UAAU;AACZ;;AAEA;;EAEE,aAAa;EACb,kBAAkB;EAClB,iBAAiB;EACjB,sBAAsB;EACtB,eAAe;EACf,kBAAkB;EAClB,YAAY;AACd;;AAEA;;EAEE,yBAAyB;EACzB,iBAAiB;EACjB,yBAAyB;EACzB,eAAe;AACjB;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV;;;AAGA;;EAEE,WAAW;AACb;AACA;;EAEE,UAAU;EACV,WAAW;AACb;AACA;;EAEE,UAAU;AACZ;;;AAGA;;EAEE,aAAa;EACb,uBAAuB;EACvB,QAAQ;AACV;;;;;AAKA;;EAEE,gBAAgB;EAChB,yBAAyB;EACzB,uCAAuC;EACvC,kBAAkB;EAClB,wCAAwC;EACxC,sBAAsB;EACtB,WAAW;EACX,eAAe;EACf,qBAAqB;EACrB,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,qBAAqB;EACrB,iBAAiB;EACjB,yBAAyB;EACzB,0BAA0B;EAC1B,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,2CAA2C;EAC3C,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,kCAAkC;EAClC,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,8CAA8C;AAChD",sourcesContent:["*{\n    margin:0;\n    padding: 0;\n}\n\nbody{\n  position: fixed;\n}\n\nul{\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    gap:6vh;\n    padding:20px;\n    text-align: center;\n}\n\nnav{\n    height: 100vh;\n    background-color: rgb(123, 182, 230);\n}\n\n.navBarClass\n{\n  width:35vh;\n}\n\n.container\n{\n  display: flex;\n}\n\n\n.rightTemplate\n{\n  width:350vh;\n  background-color: beige;\n}\n\n\n.navBarLine\n{\n  border:1px solid black;\n  width:40vh;\n}\n\n#popUp\n{\n  display: none;\n  margin-left: 650px;\n  margin-top: 300px;\n  border:2px solid black;\n  max-width: 60vh;\n  position: relative;\n  padding:20px;\n}\n\n#blurredPopUp\n{\n  transition-duration: 0.2s;\n  filter: blur(8px);\n  -webkit-filter: blur(8px);\n  position: fixed;\n}\n\n.addTask\n{\n  display: flex;\n  flex-direction: column;\n  gap:15px;\n}\n\n\n.titleInput\n{\n  width: 50vh;\n}\n.descInput\n{\n  width:50vh;\n  height:50px;\n}\n.dueDateInput\n{\n  width:50vh;\n}\n\n\n.popUpButtons\n{\n  display: flex;\n  justify-content: center;\n  gap:30px;\n}\n\n\n\n\n.addProject {\n\n  appearance: none;\n  background-color: #2ea44f;\n  border: 1px solid rgba(27, 31, 35, .15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, .1) 0 1px 0;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n\n.addProject:focus:not(:focus-visible):not(.focus-visible) {\n  box-shadow: none;\n  outline: none;\n}\n\n.addProject:hover {\n  background-color: #2c974b;\n}\n\n.addProject:focus {\n  box-shadow: rgba(46, 164, 79, .4) 0 0 0 3px;\n  outline: none;\n}\n\n.addProject:disabled {\n  background-color: #94d3a2;\n  border-color: rgba(27, 31, 35, .1);\n  color: rgba(255, 255, 255, .8);\n  cursor: default;\n}\n\n.addProject:active {\n  background-color: #298e46;\n  box-shadow: rgba(20, 70, 32, .2) 0 1px 0 inset;\n}\n\n"],sourceRoot:""}]);const d=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var d=0;d<this.length;d++){var A=this[d][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);a&&i[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},i=[],d=0;d<n.length;d++){var A=n[d],c=a.base?A[0]+a.base:A[0],s=r[c]||0,l="".concat(c," ").concat(s);r[c]=s+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=o(u,a);a.byIndex=d,e.splice(d,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var d=t(r[i]);e[d].references--}for(var A=a(n,o),c=0;c<r.length;c++){var s=t(r[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}r=A}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var a={};(()=>{t.d(a,{n:()=>h});var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),d=t.n(i),A=t(565),c=t.n(A),s=t(216),l=t.n(s),p=t(589),u=t.n(p),C=t(426),E={};E.styleTagTransform=u(),E.setAttributes=c(),E.insert=d().bind(null,"head"),E.domAPI=r(),E.insertStyleElement=l(),e()(C.Z,E),C.Z&&C.Z.locals&&C.Z.locals;const h=document.getElementById("container"),b=document.createElement("div"),f=document.createElement("nav"),B=document.createElement("ul"),m=document.createElement("li"),v=document.createElement("li"),x=document.createElement("li"),g=document.createElement("ul"),y=document.createElement("button"),k=document.createElement("div");h.appendChild(b),b.appendChild(f),f.appendChild(B),B.appendChild(m),B.appendChild(v),B.appendChild(x),f.appendChild(k),f.appendChild(g),g.appendChild(y),b.classList.add("navBarClass"),B.classList.add("initialProjects"),g.classList.add("navBarProjects"),y.classList.add("addProject"),k.classList.add("navBarLine"),m.classList.add("todayBtn"),m.textContent="Today",v.textContent="This Week",x.textContent="Later",y.textContent="➕ Add Project";const w=document.createElement("div");h.appendChild(w),w.classList.add("rightTemplate"),m.addEventListener("click",(()=>{w.appendChild((()=>{const n=document.createElement("div"),e=document.createElement("button"),t=document.createElement("div"),a=document.createElement("div"),o=document.createElement("button"),r=document.createElement("button");return e.textContent="Add Task",o.textContent="Close",r.textContent="Submit",a.classList.add("popUpButtons"),n.classList.add("todayPage"),t.setAttribute("id","popUp"),n.setAttribute("id","todayPage"),n.appendChild(e),document.body.appendChild(t),t.appendChild((()=>{const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div"),r=document.createElement("input"),i=document.createElement("div"),d=document.createElement("input"),A=document.createElement("div"),c=document.createElement("input");return n.appendChild(e),n.appendChild(t),n.appendChild(a),e.appendChild(o),e.appendChild(r),t.appendChild(i),t.appendChild(d),a.appendChild(A),a.appendChild(c),n.classList.add("addTask"),e.classList.add("addTitle"),t.classList.add("addDesc"),a.classList.add("addDueDate"),o.classList.add("titleName"),r.classList.add("titleInput"),i.classList.add("descName"),d.classList.add("descInput"),A.classList.add("dueDateName"),c.classList.add("dueDateInput"),o.textContent="Title",r.textContent="",i.textContent="Description",d.textContent="",A.textContent="Due Date",r.setAttribute("type","text"),d.setAttribute("type","text"),c.setAttribute("type","date"),n})()),t.appendChild(a),a.appendChild(r),a.appendChild(o),o.addEventListener("click",(()=>{t.style.display="none",h.id="container"})),e.addEventListener("click",(()=>{t.style.display="block",h.id="blurredPopUp"})),n})())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,