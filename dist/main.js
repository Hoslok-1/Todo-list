(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>r});var o=t(537),a=t.n(o),d=t(645),i=t.n(d)()(a());i.push([n.id,"*{\n    margin:0;\n    padding: 0;\n}\n\nbody{\n  position: fixed;\n}\n\nul{\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    gap:6vh;\n    padding:20px;\n    text-align: center;\n}\n\nnav{\n    height: 100vh;\n    background-color: rgb(123, 182, 230);\n}\n\n.navBarClass\n{\n  width:35vh;\n}\n\n.container\n{\n  display: flex;\n}\n\n\n.rightTemplate\n{\n  width:350vh;\n  background-color: beige;\n}\n\n\n.navBarLine\n{\n  border:1px solid black;\n  width:40vh;\n}\n\n#popUp\n{\n  display: none;\n  margin-left: 650px;\n  margin-top: 300px;\n  border:2px solid black;\n  max-width: 60vh;\n  position: relative;\n  padding:20px;\n}\n\n#blurredPopUp\n{\n  transition-duration: 0.2s;\n  filter: blur(8px);\n  -webkit-filter: blur(8px);\n  position: fixed;\n}\n\n.addTask\n{\n  display: flex;\n  flex-direction: column;\n  gap:15px;\n}\n\n\n.titleInput\n{\n  width: 50vh;\n}\n.descInput\n{\n  width:50vh;\n  height:50px;\n}\n.dueDateInput\n{\n  width:50vh;\n}\n\n\n.popUpButtons\n{\n  display: flex;\n  justify-content: center;\n  gap:30px;\n}\n\n\n.task\n{\n  display: flex;\n  justify-content:flex-start;\n  gap:200px;\n  height:40px;\n  margin-left:150px;\n  min-width: 0px;\n  text-align: center;\n}\n\n.taskDesc\n{\n  min-width: 0px;\n  max-width: 200px;\n}\n\n\n\n.addProject {\n\n  appearance: none;\n  background-color: #2ea44f;\n  border: 1px solid rgba(27, 31, 35, .15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, .1) 0 1px 0;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n\n.addProject:focus:not(:focus-visible):not(.focus-visible) {\n  box-shadow: none;\n  outline: none;\n}\n\n.addProject:hover {\n  background-color: #2c974b;\n}\n\n.addProject:focus {\n  box-shadow: rgba(46, 164, 79, .4) 0 0 0 3px;\n  outline: none;\n}\n\n.addProject:disabled {\n  background-color: #94d3a2;\n  border-color: rgba(27, 31, 35, .1);\n  color: rgba(255, 255, 255, .8);\n  cursor: default;\n}\n\n.addProject:active {\n  background-color: #298e46;\n  box-shadow: rgba(20, 70, 32, .2) 0 1px 0 inset;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,QAAQ;IACR,UAAU;AACd;;AAEA;EACE,eAAe;AACjB;;AAEA;IACI,qBAAqB;IACrB,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,oCAAoC;AACxC;;AAEA;;EAEE,UAAU;AACZ;;AAEA;;EAEE,aAAa;AACf;;;AAGA;;EAEE,WAAW;EACX,uBAAuB;AACzB;;;AAGA;;EAEE,sBAAsB;EACtB,UAAU;AACZ;;AAEA;;EAEE,aAAa;EACb,kBAAkB;EAClB,iBAAiB;EACjB,sBAAsB;EACtB,eAAe;EACf,kBAAkB;EAClB,YAAY;AACd;;AAEA;;EAEE,yBAAyB;EACzB,iBAAiB;EACjB,yBAAyB;EACzB,eAAe;AACjB;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV;;;AAGA;;EAEE,WAAW;AACb;AACA;;EAEE,UAAU;EACV,WAAW;AACb;AACA;;EAEE,UAAU;AACZ;;;AAGA;;EAEE,aAAa;EACb,uBAAuB;EACvB,QAAQ;AACV;;;AAGA;;EAEE,aAAa;EACb,0BAA0B;EAC1B,SAAS;EACT,WAAW;EACX,iBAAiB;EACjB,cAAc;EACd,kBAAkB;AACpB;;AAEA;;EAEE,cAAc;EACd,gBAAgB;AAClB;;;;AAIA;;EAEE,gBAAgB;EAChB,yBAAyB;EACzB,uCAAuC;EACvC,kBAAkB;EAClB,wCAAwC;EACxC,sBAAsB;EACtB,WAAW;EACX,eAAe;EACf,qBAAqB;EACrB,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,qBAAqB;EACrB,iBAAiB;EACjB,yBAAyB;EACzB,0BAA0B;EAC1B,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,2CAA2C;EAC3C,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,kCAAkC;EAClC,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,8CAA8C;AAChD",sourcesContent:["*{\n    margin:0;\n    padding: 0;\n}\n\nbody{\n  position: fixed;\n}\n\nul{\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    gap:6vh;\n    padding:20px;\n    text-align: center;\n}\n\nnav{\n    height: 100vh;\n    background-color: rgb(123, 182, 230);\n}\n\n.navBarClass\n{\n  width:35vh;\n}\n\n.container\n{\n  display: flex;\n}\n\n\n.rightTemplate\n{\n  width:350vh;\n  background-color: beige;\n}\n\n\n.navBarLine\n{\n  border:1px solid black;\n  width:40vh;\n}\n\n#popUp\n{\n  display: none;\n  margin-left: 650px;\n  margin-top: 300px;\n  border:2px solid black;\n  max-width: 60vh;\n  position: relative;\n  padding:20px;\n}\n\n#blurredPopUp\n{\n  transition-duration: 0.2s;\n  filter: blur(8px);\n  -webkit-filter: blur(8px);\n  position: fixed;\n}\n\n.addTask\n{\n  display: flex;\n  flex-direction: column;\n  gap:15px;\n}\n\n\n.titleInput\n{\n  width: 50vh;\n}\n.descInput\n{\n  width:50vh;\n  height:50px;\n}\n.dueDateInput\n{\n  width:50vh;\n}\n\n\n.popUpButtons\n{\n  display: flex;\n  justify-content: center;\n  gap:30px;\n}\n\n\n.task\n{\n  display: flex;\n  justify-content:flex-start;\n  gap:200px;\n  height:40px;\n  margin-left:150px;\n  min-width: 0px;\n  text-align: center;\n}\n\n.taskDesc\n{\n  min-width: 0px;\n  max-width: 200px;\n}\n\n\n\n.addProject {\n\n  appearance: none;\n  background-color: #2ea44f;\n  border: 1px solid rgba(27, 31, 35, .15);\n  border-radius: 6px;\n  box-shadow: rgba(27, 31, 35, .1) 0 1px 0;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n\n.addProject:focus:not(:focus-visible):not(.focus-visible) {\n  box-shadow: none;\n  outline: none;\n}\n\n.addProject:hover {\n  background-color: #2c974b;\n}\n\n.addProject:focus {\n  box-shadow: rgba(46, 164, 79, .4) 0 0 0 3px;\n  outline: none;\n}\n\n.addProject:disabled {\n  background-color: #94d3a2;\n  border-color: rgba(27, 31, 35, .1);\n  color: rgba(255, 255, 255, .8);\n  cursor: default;\n}\n\n.addProject:active {\n  background-color: #298e46;\n  box-shadow: rgba(20, 70, 32, .2) 0 1px 0 inset;\n}\n\n"],sourceRoot:""}]);const r=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,d){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var r=0;r<this.length;r++){var c=this[r][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var s=[].concat(n[l]);o&&i[s[0]]||(void 0!==d&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=d),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(a," */");return[e].concat([d]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var d={},i=[],r=0;r<n.length;r++){var c=n[r],l=o.base?c[0]+o.base:c[0],s=d[l]||0,A="".concat(l," ").concat(s);d[l]=s+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,o);o.byIndex=r,e.splice(r,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var d=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<d.length;i++){var r=t(d[i]);e[r].references--}for(var c=o(n,a),l=0;l<d.length;l++){var s=t(d[l]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}d=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var d=e[o]={id:o,exports:{}};return n[o](d,d.exports,t),d.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{n:()=>k,j:()=>z});var n=t(379),e=t.n(n),a=t(795),d=t.n(a),i=t(569),r=t.n(i),c=t(565),l=t.n(c),s=t(216),A=t.n(s),p=t(589),u=t.n(p),m=t(426),E={};E.styleTagTransform=u(),E.setAttributes=l(),E.insert=r().bind(null,"head"),E.domAPI=d(),E.insertStyleElement=A(),e()(m.Z,E),m.Z&&m.Z.locals&&m.Z.locals;const C=()=>{const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div"),o=document.createElement("div"),a=document.createElement("input"),d=(document.createElement("div"),document.createElement("input"),document.createElement("div")),i=document.createElement("input");return n.appendChild(e),n.appendChild(t),e.appendChild(o),e.appendChild(a),t.appendChild(d),t.appendChild(i),n.classList.add("addTask"),e.classList.add("addTitle"),t.classList.add("addDueDate"),o.classList.add("titleName"),a.classList.add("titleInput"),d.classList.add("dueDateName"),i.classList.add("dueDateInput"),o.textContent="Title",a.textContent="",d.textContent="Due Date",a.setAttribute("id","titleInput"),i.setAttribute("id","dueDateInput"),a.setAttribute("type","text"),i.setAttribute("type","date"),n};let h=1,b=[],B=[];function v(n,e){this.title=n,this.date=e}function g(n,e,t){const o=new v(n,e);1==t?(b.push(o),console.log(b)):2==t&&(B.push(o),console.log(B)),z.appendChild((n=>{const e=document.createElement("div"),t=document.createElement("div"),o=document.createElement("div"),a=document.createElement("input");return e.classList.add("task"),e.classList.add(`${h}`),a.classList.add("taskChecked"),a.setAttribute("type","checkbox"),e.appendChild(a),e.appendChild(t),e.appendChild(o),t.textContent=n.title,o.textContent=n.date,h+=1,e})(o))}function f(){for(let n=0;n<b.length;n++)console.log(b[n].title,b[n].date)}const x=document.createElement("div"),y=document.createElement("div"),k=document.getElementById("container"),I=document.createElement("div"),w=document.createElement("nav"),L=document.createElement("ul"),U=document.createElement("li"),P=document.createElement("li"),j=document.createElement("li"),T=document.createElement("ul"),D=document.createElement("button"),S=document.createElement("div");k.appendChild(I),I.appendChild(w),w.appendChild(L),L.appendChild(U),L.appendChild(P),L.appendChild(j),w.appendChild(S),w.appendChild(T),T.appendChild(D),I.classList.add("navBarClass"),L.classList.add("initialProjects"),T.classList.add("navBarProjects"),D.classList.add("addProject"),S.classList.add("navBarLine"),U.classList.add("todayBtn"),U.textContent="Today",P.textContent="This Week",j.textContent="Later",D.textContent="➕ Add Project";const z=document.createElement("div");k.appendChild(z),z.classList.add("rightTemplate"),U.addEventListener("click",(()=>{x.remove(),y.remove(),z.innerHTML="",z.appendChild((()=>{const n=document.createElement("div"),e=document.createElement("button"),t=document.createElement("div"),o=document.createElement("button"),a=document.createElement("button"),d=document.createElement("div");e.textContent="Add Task",o.textContent="Close",a.textContent="Submit",d.classList.add("displayTaskList"),t.classList.add("popUpButtons"),n.classList.add("todayPage"),x.setAttribute("id","popUp"),n.setAttribute("id","todayPage"),a.setAttribute("id","submitPopUp"),o.setAttribute("id","closePopUp"),document.getElementById("popUp"),n.appendChild(e),document.body.appendChild(x),x.appendChild(C()),x.appendChild(t),t.appendChild(a),t.appendChild(o),n.appendChild(d);const i=document.getElementById("titleInput"),r=document.getElementById("dueDateInput");return document.getElementById("closePopUp").addEventListener("click",(()=>{x.style.display="none",k.id="container",x.remove(),f()})),e.addEventListener("click",(()=>{0!=b.length?(function(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("button"),o=document.createElement("button");t.textContent="Close",o.textContent="Submit",e.classList.add("popUpButtons"),n.setAttribute("id","popUp"),document.body.appendChild(n),n.appendChild(C()),n.appendChild(e),document.getElementById("popUp").style.display="block",o.setAttribute("id","submitPopUp"),t.setAttribute("id","closePopUp");const a=document.getElementById("titleInput"),d=document.getElementById("dueDateInput");document.getElementById("closePopUp").addEventListener("click",(()=>{n.style.display="none",k.id="container",n.remove(),f()})),document.getElementById("submitPopUp").addEventListener("click",(()=>{g(a.value,d.value,1)}))}(),console.log("generating popup...")):(document.getElementById("popUp").style.display="block",k.id="blurredPopUp")})),document.getElementById("submitPopUp").addEventListener("click",(()=>{g(i.value,r.value,1)})),n})())})),P.addEventListener("click",(()=>{x.remove(),y.remove(),z.innerHTML="",z.appendChild((()=>{const n=document.createElement("div"),e=document.createElement("button"),t=document.createElement("div"),o=document.createElement("button"),a=document.createElement("button");e.textContent="Add Task",o.textContent="Close",a.textContent="Submit",t.classList.add("popUpButtons"),n.classList.add("thisweekPage"),y.setAttribute("id","popUp"),n.setAttribute("id","thisweekPage"),a.setAttribute("id","submitPopUp"),o.setAttribute("id","closePopUp"),n.appendChild(e),document.body.appendChild(y),y.appendChild(C()),y.appendChild(t),t.appendChild(a),t.appendChild(o);const d=document.getElementById("titleInput"),i=document.getElementById("dueDateInput");return o.addEventListener("click",(()=>{y.style.display="none",k.id="container",y.remove()})),e.addEventListener("click",(()=>{0!=B.length&&console.log("generating popup..."),y.style.display="block",k.id="blurredPopUp"})),document.getElementById("submitPopUp").addEventListener("click",(()=>{g(d.value,i.value,2)})),n})())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YyxXQUMzQm9DLEVBQVdwQyxZQUFjLFFBQ3pCcUMsRUFBWXJDLFlBQWMsU0FHMUJtQyxFQUFhckMsVUFBVUMsSUFBSSxnQkFDM0I2QyxFQUFhOUMsVUFBVUMsSUFBSSxnQkFDM0IsRUFBTTFDLGFBQWEsS0FBSyxTQUN4QnVGLEVBQWF2RixhQUFhLEtBQUssZ0JBQy9CZ0YsRUFBWWhGLGFBQWEsS0FBSyxlQUM5QitFLEVBQVcvRSxhQUFhLEtBQUssY0FHN0J1RixFQUFhOUYsWUFBWStGLEdBQ3pCeEcsU0FBU2tHLEtBQUt6RixZQUFZLEdBQzFCLEVBQU1BLFlBQVl3QyxLQUNsQixFQUFNeEMsWUFBWXFGLEdBQ2xCQSxFQUFhckYsWUFBWXVGLEdBQ3pCRixFQUFhckYsWUFBWXNGLEdBR3pCLE1BQU1oQyxFQUFRL0QsU0FBU2dGLGVBQWUsY0FDaENoQixFQUFPaEUsU0FBU2dGLGVBQWUsZ0JBbUJyQyxPQWpCQWUsRUFBV0wsaUJBQWlCLFNBQVEsS0FBSyxFQUFNN0YsTUFBTXNHLFFBQVUsT0FBT3BCLEVBQVVsSixHQUFLLFlBQVksRUFBTXVELFFBQU8sSUFFOUdvSCxFQUFhZCxpQkFBaUIsU0FBUSxLQUNQLEdBQXhCN0IsRUFBY3JILFFBR1Q0SCxRQUFRQyxJQUFJLHVCQUVoQixFQUFNeEUsTUFBTXNHLFFBQVUsUUFDdEJwQixFQUFVbEosR0FBSyxrQkFJdkJtRSxTQUFTZ0YsZUFBZSxlQUFlVSxpQkFBaUIsU0FBUSxLQUFLekIsRUFBWUYsRUFBTXFDLE1BQU1wQyxFQUFLb0MsTUFBTSxFQUFFLElBSW5HRyxDQUFZLEVDS3FIRSxHQUFjLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2FkZHRhc2suanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3ZpZXd0YXNrcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvYWRkdGFza0Z1bmMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3RvZGF5dmlldy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdGhpc3dlZWt2aWV3LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIip7XFxuICAgIG1hcmdpbjowO1xcbiAgICBwYWRkaW5nOiAwO1xcbn1cXG5cXG5ib2R5e1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbn1cXG5cXG51bHtcXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6NnZoO1xcbiAgICBwYWRkaW5nOjIwcHg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxubmF2e1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTIzLCAxODIsIDIzMCk7XFxufVxcblxcbi5uYXZCYXJDbGFzc1xcbntcXG4gIHdpZHRoOjM1dmg7XFxufVxcblxcbi5jb250YWluZXJcXG57XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG5cXG4ucmlnaHRUZW1wbGF0ZVxcbntcXG4gIHdpZHRoOjM1MHZoO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogYmVpZ2U7XFxufVxcblxcblxcbi5uYXZCYXJMaW5lXFxue1xcbiAgYm9yZGVyOjFweCBzb2xpZCBibGFjaztcXG4gIHdpZHRoOjQwdmg7XFxufVxcblxcbiNwb3BVcFxcbntcXG4gIGRpc3BsYXk6IG5vbmU7XFxuICBtYXJnaW4tbGVmdDogNjUwcHg7XFxuICBtYXJnaW4tdG9wOiAzMDBweDtcXG4gIGJvcmRlcjoycHggc29saWQgYmxhY2s7XFxuICBtYXgtd2lkdGg6IDYwdmg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBwYWRkaW5nOjIwcHg7XFxufVxcblxcbiNibHVycmVkUG9wVXBcXG57XFxuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjJzO1xcbiAgZmlsdGVyOiBibHVyKDhweCk7XFxuICAtd2Via2l0LWZpbHRlcjogYmx1cig4cHgpO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbn1cXG5cXG4uYWRkVGFza1xcbntcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOjE1cHg7XFxufVxcblxcblxcbi50aXRsZUlucHV0XFxue1xcbiAgd2lkdGg6IDUwdmg7XFxufVxcbi5kZXNjSW5wdXRcXG57XFxuICB3aWR0aDo1MHZoO1xcbiAgaGVpZ2h0OjUwcHg7XFxufVxcbi5kdWVEYXRlSW5wdXRcXG57XFxuICB3aWR0aDo1MHZoO1xcbn1cXG5cXG5cXG4ucG9wVXBCdXR0b25zXFxue1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgZ2FwOjMwcHg7XFxufVxcblxcblxcbi50YXNrXFxue1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O1xcbiAgZ2FwOjIwMHB4O1xcbiAgaGVpZ2h0OjQwcHg7XFxuICBtYXJnaW4tbGVmdDoxNTBweDtcXG4gIG1pbi13aWR0aDogMHB4O1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4udGFza0Rlc2NcXG57XFxuICBtaW4td2lkdGg6IDBweDtcXG4gIG1heC13aWR0aDogMjAwcHg7XFxufVxcblxcblxcblxcbi5hZGRQcm9qZWN0IHtcXG5cXG4gIGFwcGVhcmFuY2U6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmVhNDRmO1xcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNywgMzEsIDM1LCAuMTUpO1xcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xcbiAgYm94LXNoYWRvdzogcmdiYSgyNywgMzEsIDM1LCAuMSkgMCAxcHggMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBjb2xvcjogI2ZmZjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBsaW5lLWhlaWdodDogMjBweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIHVzZXItc2VsZWN0OiBub25lO1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxufVxcblxcbi5hZGRQcm9qZWN0OmZvY3VzOm5vdCg6Zm9jdXMtdmlzaWJsZSk6bm90KC5mb2N1cy12aXNpYmxlKSB7XFxuICBib3gtc2hhZG93OiBub25lO1xcbiAgb3V0bGluZTogbm9uZTtcXG59XFxuXFxuLmFkZFByb2plY3Q6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJjOTc0YjtcXG59XFxuXFxuLmFkZFByb2plY3Q6Zm9jdXMge1xcbiAgYm94LXNoYWRvdzogcmdiYSg0NiwgMTY0LCA3OSwgLjQpIDAgMCAwIDNweDtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi5hZGRQcm9qZWN0OmRpc2FibGVkIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM5NGQzYTI7XFxuICBib3JkZXItY29sb3I6IHJnYmEoMjcsIDMxLCAzNSwgLjEpO1xcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjgpO1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbn1cXG5cXG4uYWRkUHJvamVjdDphY3RpdmUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI5OGU0NjtcXG4gIGJveC1zaGFkb3c6IHJnYmEoMjAsIDcwLCAzMiwgLjIpIDAgMXB4IDAgaW5zZXQ7XFxufVxcblxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxRQUFRO0lBQ1IsVUFBVTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLE9BQU87SUFDUCxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG9DQUFvQztBQUN4Qzs7QUFFQTs7RUFFRSxVQUFVO0FBQ1o7O0FBRUE7O0VBRUUsYUFBYTtBQUNmOzs7QUFHQTs7RUFFRSxXQUFXO0VBQ1gsdUJBQXVCO0FBQ3pCOzs7QUFHQTs7RUFFRSxzQkFBc0I7RUFDdEIsVUFBVTtBQUNaOztBQUVBOztFQUVFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLFlBQVk7QUFDZDs7QUFFQTs7RUFFRSx5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixlQUFlO0FBQ2pCOztBQUVBOztFQUVFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsUUFBUTtBQUNWOzs7QUFHQTs7RUFFRSxXQUFXO0FBQ2I7QUFDQTs7RUFFRSxVQUFVO0VBQ1YsV0FBVztBQUNiO0FBQ0E7O0VBRUUsVUFBVTtBQUNaOzs7QUFHQTs7RUFFRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLFFBQVE7QUFDVjs7O0FBR0E7O0VBRUUsYUFBYTtFQUNiLDBCQUEwQjtFQUMxQixTQUFTO0VBQ1QsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBOztFQUVFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7Ozs7QUFJQTs7RUFFRSxnQkFBZ0I7RUFDaEIseUJBQXlCO0VBQ3pCLHVDQUF1QztFQUN2QyxrQkFBa0I7RUFDbEIsd0NBQXdDO0VBQ3hDLHNCQUFzQjtFQUN0QixXQUFXO0VBQ1gsZUFBZTtFQUNmLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixpQkFBaUI7RUFDakIseUJBQXlCO0VBQ3pCLDBCQUEwQjtFQUMxQixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLDJDQUEyQztFQUMzQyxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsa0NBQWtDO0VBQ2xDLDhCQUE4QjtFQUM5QixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDhDQUE4QztBQUNoRFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqe1xcbiAgICBtYXJnaW46MDtcXG4gICAgcGFkZGluZzogMDtcXG59XFxuXFxuYm9keXtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG59XFxuXFxudWx7XFxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOjZ2aDtcXG4gICAgcGFkZGluZzoyMHB4O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbm5hdntcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEyMywgMTgyLCAyMzApO1xcbn1cXG5cXG4ubmF2QmFyQ2xhc3NcXG57XFxuICB3aWR0aDozNXZoO1xcbn1cXG5cXG4uY29udGFpbmVyXFxue1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuXFxuLnJpZ2h0VGVtcGxhdGVcXG57XFxuICB3aWR0aDozNTB2aDtcXG4gIGJhY2tncm91bmQtY29sb3I6IGJlaWdlO1xcbn1cXG5cXG5cXG4ubmF2QmFyTGluZVxcbntcXG4gIGJvcmRlcjoxcHggc29saWQgYmxhY2s7XFxuICB3aWR0aDo0MHZoO1xcbn1cXG5cXG4jcG9wVXBcXG57XFxuICBkaXNwbGF5OiBub25lO1xcbiAgbWFyZ2luLWxlZnQ6IDY1MHB4O1xcbiAgbWFyZ2luLXRvcDogMzAwcHg7XFxuICBib3JkZXI6MnB4IHNvbGlkIGJsYWNrO1xcbiAgbWF4LXdpZHRoOiA2MHZoO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgcGFkZGluZzoyMHB4O1xcbn1cXG5cXG4jYmx1cnJlZFBvcFVwXFxue1xcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4ycztcXG4gIGZpbHRlcjogYmx1cig4cHgpO1xcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoOHB4KTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG59XFxuXFxuLmFkZFRhc2tcXG57XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDoxNXB4O1xcbn1cXG5cXG5cXG4udGl0bGVJbnB1dFxcbntcXG4gIHdpZHRoOiA1MHZoO1xcbn1cXG4uZGVzY0lucHV0XFxue1xcbiAgd2lkdGg6NTB2aDtcXG4gIGhlaWdodDo1MHB4O1xcbn1cXG4uZHVlRGF0ZUlucHV0XFxue1xcbiAgd2lkdGg6NTB2aDtcXG59XFxuXFxuXFxuLnBvcFVwQnV0dG9uc1xcbntcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGdhcDozMHB4O1xcbn1cXG5cXG5cXG4udGFza1xcbntcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtcXG4gIGdhcDoyMDBweDtcXG4gIGhlaWdodDo0MHB4O1xcbiAgbWFyZ2luLWxlZnQ6MTUwcHg7XFxuICBtaW4td2lkdGg6IDBweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLnRhc2tEZXNjXFxue1xcbiAgbWluLXdpZHRoOiAwcHg7XFxuICBtYXgtd2lkdGg6IDIwMHB4O1xcbn1cXG5cXG5cXG5cXG4uYWRkUHJvamVjdCB7XFxuXFxuICBhcHBlYXJhbmNlOiBub25lO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJlYTQ0ZjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjcsIDMxLCAzNSwgLjE1KTtcXG4gIGJvcmRlci1yYWRpdXM6IDZweDtcXG4gIGJveC1zaGFkb3c6IHJnYmEoMjcsIDMxLCAzNSwgLjEpIDAgMXB4IDA7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgY29sb3I6ICNmZmY7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbn1cXG5cXG4uYWRkUHJvamVjdDpmb2N1czpub3QoOmZvY3VzLXZpc2libGUpOm5vdCguZm9jdXMtdmlzaWJsZSkge1xcbiAgYm94LXNoYWRvdzogbm9uZTtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi5hZGRQcm9qZWN0OmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMyYzk3NGI7XFxufVxcblxcbi5hZGRQcm9qZWN0OmZvY3VzIHtcXG4gIGJveC1zaGFkb3c6IHJnYmEoNDYsIDE2NCwgNzksIC40KSAwIDAgMCAzcHg7XFxuICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4uYWRkUHJvamVjdDpkaXNhYmxlZCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTRkM2EyO1xcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDI3LCAzMSwgMzUsIC4xKTtcXG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIC44KTtcXG4gIGN1cnNvcjogZGVmYXVsdDtcXG59XFxuXFxuLmFkZFByb2plY3Q6YWN0aXZlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMyOThlNDY7XFxuICBib3gtc2hhZG93OiByZ2JhKDIwLCA3MCwgMzIsIC4yKSAwIDFweCAwIGluc2V0O1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQgY29uc3QgYWRkVGFza0YgPSAoKSA9PntcblxuY29uc3QgYWRkVGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuY29uc3QgYWRkVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmNvbnN0IGFkZER1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmNvbnN0IGFkZFRpdGxlTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuY29uc3QgYWRkVGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5jb25zdCBhZGREZXNjTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuY29uc3QgYWRkRGVzY0lucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbmNvbnN0IGFkZER1ZURhdGVOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5jb25zdCBhZGREdWVEYXRlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuXG5cbmFkZFRhc2suYXBwZW5kQ2hpbGQoYWRkVGl0bGUpO1xuXG5hZGRUYXNrLmFwcGVuZENoaWxkKGFkZER1ZURhdGUpO1xuYWRkVGl0bGUuYXBwZW5kQ2hpbGQoYWRkVGl0bGVOYW1lKTtcbmFkZFRpdGxlLmFwcGVuZENoaWxkKGFkZFRpdGxlSW5wdXQpO1xuXG5hZGREdWVEYXRlLmFwcGVuZENoaWxkKGFkZER1ZURhdGVOYW1lKTtcbmFkZER1ZURhdGUuYXBwZW5kQ2hpbGQoYWRkRHVlRGF0ZUlucHV0KTtcblxuXG5hZGRUYXNrLmNsYXNzTGlzdC5hZGQoJ2FkZFRhc2snKTtcbmFkZFRpdGxlLmNsYXNzTGlzdC5hZGQoJ2FkZFRpdGxlJyk7XG5cbmFkZER1ZURhdGUuY2xhc3NMaXN0LmFkZCgnYWRkRHVlRGF0ZScpO1xuYWRkVGl0bGVOYW1lLmNsYXNzTGlzdC5hZGQoJ3RpdGxlTmFtZScpO1xuYWRkVGl0bGVJbnB1dC5jbGFzc0xpc3QuYWRkKCd0aXRsZUlucHV0Jyk7XG5cbmFkZER1ZURhdGVOYW1lLmNsYXNzTGlzdC5hZGQoJ2R1ZURhdGVOYW1lJyk7XG5hZGREdWVEYXRlSW5wdXQuY2xhc3NMaXN0LmFkZCgnZHVlRGF0ZUlucHV0Jyk7XG5cblxuYWRkVGl0bGVOYW1lLnRleHRDb250ZW50ID0gXCJUaXRsZVwiXG5hZGRUaXRsZUlucHV0LnRleHRDb250ZW50ID0gXCJcIjtcblxuYWRkRHVlRGF0ZU5hbWUudGV4dENvbnRlbnQgPSBcIkR1ZSBEYXRlXCI7XG5cblxuXG5hZGRUaXRsZUlucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCd0aXRsZUlucHV0Jyk7XG5cbmFkZER1ZURhdGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywnZHVlRGF0ZUlucHV0Jyk7XG5cbmFkZFRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywndGV4dCcpO1xuYWRkRHVlRGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsJ2RhdGUnKTtcblxucmV0dXJuIGFkZFRhc2s7ICBcblxufSIsImltcG9ydCB7IHRhc2tzVG9kYXkgfSBmcm9tIFwiLi9hZGR0YXNrRnVuYy5qc1wiO1xubGV0IGkgPSAxO1xuZXhwb3J0IGNvbnN0IHZpZXdUYXNrID0gKHRhc2spID0+e1xuXG4gICAgY29uc3QgdGFza0RldiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IHRhc2tOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgdGFza0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCB0YXNrQ2hlY2tlZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5cbiAgICB0YXNrRGV2LmNsYXNzTGlzdC5hZGQoXCJ0YXNrXCIpO1xuICAgIHRhc2tEZXYuY2xhc3NMaXN0LmFkZChgJHtpfWApXG4gICAgdGFza0NoZWNrZWQuY2xhc3NMaXN0LmFkZCgndGFza0NoZWNrZWQnKTtcbiAgICB0YXNrQ2hlY2tlZC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCdjaGVja2JveCcpO1xuICAgIFxuICAgIHRhc2tEZXYuYXBwZW5kQ2hpbGQodGFza0NoZWNrZWQpO1xuICAgIHRhc2tEZXYuYXBwZW5kQ2hpbGQodGFza05hbWUpO1xuICAgIHRhc2tEZXYuYXBwZW5kQ2hpbGQodGFza0R1ZURhdGUpO1xuXG5cblxuICAgIHRhc2tOYW1lLnRleHRDb250ZW50ID0gdGFzay50aXRsZTtcblxuICAgIHRhc2tEdWVEYXRlLnRleHRDb250ZW50ID0gdGFzay5kYXRlO1xuXG4gICAgaSs9MTsgXG4gICAgcmV0dXJuIHRhc2tEZXY7XG5cbn1cblxuIiwiaW1wb3J0IHsgdmlld1Rhc2sgfSBmcm9tIFwiLi92aWV3dGFza3NcIjtcbmltcG9ydCB7IHJpZ2h0VGVtcGxhdGUgfSBmcm9tIFwiLlwiO1xuaW1wb3J0IHsgdG9kYXlWaWV3IH0gZnJvbSBcIi4vdG9kYXl2aWV3XCI7XG5cbmxldCB0YXNrc1RvZGF5ID0gW11cbmV4cG9ydCBsZXQgdGFza3NUaGlzV2VlayA9IFtdXG5cbmZ1bmN0aW9uIHRhc2tzKHRpdGxlLGRhdGUpXG57XG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgIHRoaXMuZGF0ZSA9IGRhdGU7XG59XG5cbmZ1bmN0aW9uIGFkZFRhc2tGdW5jKHRpdGxlLGRhdGUsdmlldylcbntcbiAgICBjb25zdCB0YXNrT2JqID0gbmV3IHRhc2tzKHRpdGxlLGRhdGUpO1xuICAgIGlmKHZpZXcgPT0gMSl7XG4gICAgICAgIHRhc2tzVG9kYXkucHVzaCh0YXNrT2JqKTtcbiAgICAgICAgY29uc29sZS5sb2codGFza3NUb2RheSk7XG4gICAgfVxuICAgIGVsc2UgaWYodmlldyA9PSAyKVxuICAgIHtcbiAgICAgICAgdGFza3NUaGlzV2Vlay5wdXNoKHRhc2tPYmopO1xuICAgICAgICBjb25zb2xlLmxvZyh0YXNrc1RoaXNXZWVrKTtcbiAgICB9XG4gICAgcmlnaHRUZW1wbGF0ZS5hcHBlbmRDaGlsZCh2aWV3VGFzayh0YXNrT2JqKSk7XG59XG5cbmZ1bmN0aW9uIGRpc3BsYXlUYXNrRnVuYygpXG57XG4gICAgZm9yKGxldCBpID0gMDtpIDwgdGFza3NUb2RheS5sZW5ndGg7aSsrKVxuICAgIHtcbiAgICAgICAgY29uc29sZS5sb2codGFza3NUb2RheVtpXS50aXRsZSx0YXNrc1RvZGF5W2ldLmRhdGUpO1xuICAgIH1cbn1cblxuZXhwb3J0IHthZGRUYXNrRnVuYyx0YXNrc1RvZGF5LGRpc3BsYXlUYXNrRnVuY30iLCJpbXBvcnQgeyBjb250YWluZXIgfSBmcm9tIFwiLlwiO1xuaW1wb3J0IHsgYWRkVGFza0YgfSBmcm9tIFwiLi9hZGR0YXNrXCI7XG5pbXBvcnQgeyBhZGRUYXNrRnVuYyx0YXNrc1RvZGF5LGRpc3BsYXlUYXNrRnVuYyB9IGZyb20gXCIuL2FkZHRhc2tGdW5jLmpzXCI7XG5leHBvcnQgY29uc3QgcG9wVXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuZXhwb3J0IGNvbnN0IHRvZGF5VmlldyA9ICgpID0+e1xuICAgIFxuXG5cbiAgICBjb25zdCB0b2RheVBhZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBhZGRUYXNrQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgY29uc3QgcG9wVXBCdXR0b25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgY2xvc2VQb3BVcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNvbnN0IHN1Ym1pdFBvcFVwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgICBjb25zdCBkaXNwbGF5VGFza3MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBcbiAgICBcbiAgICBcbiAgICBhZGRUYXNrQnRuLnRleHRDb250ZW50ID0gXCJBZGQgVGFza1wiO1xuICAgIGNsb3NlUG9wVXAudGV4dENvbnRlbnQgPSBcIkNsb3NlXCI7XG4gICAgc3VibWl0UG9wVXAudGV4dENvbnRlbnQgPSBcIlN1Ym1pdFwiXG4gICAgXG4gICAgZGlzcGxheVRhc2tzLmNsYXNzTGlzdC5hZGQoJ2Rpc3BsYXlUYXNrTGlzdCcpO1xuICAgIHBvcFVwQnV0dG9ucy5jbGFzc0xpc3QuYWRkKCdwb3BVcEJ1dHRvbnMnKTtcbiAgICB0b2RheVBhZ2UuY2xhc3NMaXN0LmFkZCgndG9kYXlQYWdlJyk7XG4gICAgcG9wVXAuc2V0QXR0cmlidXRlKCdpZCcsJ3BvcFVwJyk7XG4gICAgdG9kYXlQYWdlLnNldEF0dHJpYnV0ZSgnaWQnLCd0b2RheVBhZ2UnKTtcbiAgICBzdWJtaXRQb3BVcC5zZXRBdHRyaWJ1dGUoJ2lkJywnc3VibWl0UG9wVXAnKTtcbiAgICBjbG9zZVBvcFVwLnNldEF0dHJpYnV0ZSgnaWQnLCdjbG9zZVBvcFVwJyk7XG4gICAgY29uc3QgcG9wVXBJRCA9ICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9wVXAnKTtcblxuICAgIFxuICAgIHRvZGF5UGFnZS5hcHBlbmRDaGlsZChhZGRUYXNrQnRuKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBvcFVwKTtcbiAgICBwb3BVcC5hcHBlbmRDaGlsZChhZGRUYXNrRigpKTtcbiAgICBwb3BVcC5hcHBlbmRDaGlsZChwb3BVcEJ1dHRvbnMpO1xuICAgIHBvcFVwQnV0dG9ucy5hcHBlbmRDaGlsZChzdWJtaXRQb3BVcCk7XG4gICAgcG9wVXBCdXR0b25zLmFwcGVuZENoaWxkKGNsb3NlUG9wVXApO1xuICAgIHRvZGF5UGFnZS5hcHBlbmRDaGlsZChkaXNwbGF5VGFza3MpO1xuICAgIFxuICAgIFxuICAgIC8vZGlzcGxheVRhc2tGdW5jKCk7XG4gICAgXG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGl0bGVJbnB1dCcpO1xuICAgIGNvbnN0IGRhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZHVlRGF0ZUlucHV0Jyk7XG4gICAgXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nsb3NlUG9wVXAnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9Pntwb3BVcC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO2NvbnRhaW5lci5pZCA9IFwiY29udGFpbmVyXCI7cG9wVXAucmVtb3ZlKCk7ZGlzcGxheVRhc2tGdW5jKCl9KTtcbiAgICBhZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgICAgICBpZih0YXNrc1RvZGF5Lmxlbmd0aCAhPSAwKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGdlbmVyYXRlUG9wVXAoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImdlbmVyYXRpbmcgcG9wdXAuLi5cIilcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9wVXAnKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgICAgICAgICBjb250YWluZXIuaWQgPSBcImJsdXJyZWRQb3BVcFwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3BVcCcpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIH0pO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJtaXRQb3BVcCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e2FkZFRhc2tGdW5jKHRpdGxlLnZhbHVlLGRhdGUudmFsdWUsMSk7fSk7XG5cblxuICAgIFxuICAgIFxuICAgIFxuICAgIHJldHVybiB0b2RheVBhZ2U7XG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlUG9wVXAoKVxue1xuICAgIGNvbnN0IHBvcFVwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgcG9wVXBCdXR0b25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgY2xvc2VQb3BVcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNvbnN0IHN1Ym1pdFBvcFVwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcblxuICAgIGNsb3NlUG9wVXAudGV4dENvbnRlbnQgPSBcIkNsb3NlXCI7XG4gICAgc3VibWl0UG9wVXAudGV4dENvbnRlbnQgPSBcIlN1Ym1pdFwiXG5cbiAgICBwb3BVcEJ1dHRvbnMuY2xhc3NMaXN0LmFkZCgncG9wVXBCdXR0b25zJyk7XG4gICAgcG9wVXAuc2V0QXR0cmlidXRlKCdpZCcsJ3BvcFVwJyk7XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBvcFVwKTtcblxuICAgIHBvcFVwLmFwcGVuZENoaWxkKGFkZFRhc2tGKCkpO1xuICAgIHBvcFVwLmFwcGVuZENoaWxkKHBvcFVwQnV0dG9ucyk7XG4gICAgLy9wb3BVcEJ1dHRvbnMuYXBwZW5kQ2hpbGQoc3VibWl0UG9wVXApO1xuICAgIC8vcG9wVXBCdXR0b25zLmFwcGVuZENoaWxkKGNsb3NlUG9wVXApO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3BVcCcpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXG4gICAgc3VibWl0UG9wVXAuc2V0QXR0cmlidXRlKCdpZCcsJ3N1Ym1pdFBvcFVwJyk7XG4gICAgY2xvc2VQb3BVcC5zZXRBdHRyaWJ1dGUoJ2lkJywnY2xvc2VQb3BVcCcpO1xuXG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGl0bGVJbnB1dCcpO1xuICAgIGNvbnN0IGRhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZHVlRGF0ZUlucHV0JylcblxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjbG9zZVBvcFVwJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57cG9wVXAuc3R5bGUuZGlzcGxheSA9ICdub25lJztjb250YWluZXIuaWQgPSBcImNvbnRhaW5lclwiO3BvcFVwLnJlbW92ZSgpO2Rpc3BsYXlUYXNrRnVuYygpO30pO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJtaXRQb3BVcCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e2FkZFRhc2tGdW5jKHRpdGxlLnZhbHVlLGRhdGUudmFsdWUsMSk7fSk7XG5cblxuXG59IiwiaW1wb3J0IHsgY29udGFpbmVyIH0gZnJvbSBcIi5cIjtcbmltcG9ydCB7IGFkZFRhc2tGIH0gZnJvbSBcIi4vYWRkdGFzay5qc1wiO1xuaW1wb3J0IHsgYWRkVGFza0Z1bmMsdGFza3NUaGlzV2VlayB9IGZyb20gXCIuL2FkZHRhc2tGdW5jLmpzXCI7XG5pbXBvcnQgeyBnZW5lcmF0ZVBvcFVwIH0gZnJvbSBcIi4vdG9kYXl2aWV3XCI7XG5leHBvcnQgY29uc3QgcG9wVXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuZXhwb3J0IGNvbnN0IHRoaXN3ZWVrVmlldyA9ICgpID0+e1xuICAgIGNvbnN0IHRoaXN3ZWVrUGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IGFkZFRhc2tCdG5UViA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNvbnN0IHBvcFVwQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IGNsb3NlUG9wVXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjb25zdCBzdWJtaXRQb3BVcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXG5cblxuICAgIGFkZFRhc2tCdG5UVi50ZXh0Q29udGVudCA9IFwiQWRkIFRhc2tcIjtcbiAgICBjbG9zZVBvcFVwLnRleHRDb250ZW50ID0gXCJDbG9zZVwiO1xuICAgIHN1Ym1pdFBvcFVwLnRleHRDb250ZW50ID0gXCJTdWJtaXRcIlxuXG5cbiAgICBwb3BVcEJ1dHRvbnMuY2xhc3NMaXN0LmFkZCgncG9wVXBCdXR0b25zJyk7XG4gICAgdGhpc3dlZWtQYWdlLmNsYXNzTGlzdC5hZGQoJ3RoaXN3ZWVrUGFnZScpO1xuICAgIHBvcFVwLnNldEF0dHJpYnV0ZSgnaWQnLCdwb3BVcCcpO1xuICAgIHRoaXN3ZWVrUGFnZS5zZXRBdHRyaWJ1dGUoJ2lkJywndGhpc3dlZWtQYWdlJyk7XG4gICAgc3VibWl0UG9wVXAuc2V0QXR0cmlidXRlKCdpZCcsJ3N1Ym1pdFBvcFVwJyk7XG4gICAgY2xvc2VQb3BVcC5zZXRBdHRyaWJ1dGUoJ2lkJywnY2xvc2VQb3BVcCcpO1xuXG5cbiAgICB0aGlzd2Vla1BhZ2UuYXBwZW5kQ2hpbGQoYWRkVGFza0J0blRWKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBvcFVwKVxuICAgIHBvcFVwLmFwcGVuZENoaWxkKGFkZFRhc2tGKCkpO1xuICAgIHBvcFVwLmFwcGVuZENoaWxkKHBvcFVwQnV0dG9ucyk7XG4gICAgcG9wVXBCdXR0b25zLmFwcGVuZENoaWxkKHN1Ym1pdFBvcFVwKTtcbiAgICBwb3BVcEJ1dHRvbnMuYXBwZW5kQ2hpbGQoY2xvc2VQb3BVcCk7XG5cblxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpdGxlSW5wdXQnKTtcbiAgICBjb25zdCBkYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2R1ZURhdGVJbnB1dCcpO1xuXG4gICAgY2xvc2VQb3BVcC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9Pntwb3BVcC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO2NvbnRhaW5lci5pZCA9IFwiY29udGFpbmVyXCI7cG9wVXAucmVtb3ZlKCl9KTtcblxuICAgIGFkZFRhc2tCdG5UVi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcbiAgICAgICAgaWYodGFza3NUaGlzV2Vlay5sZW5ndGggIT0gMClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAvL2dlbmVyYXRlUG9wVXAoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImdlbmVyYXRpbmcgcG9wdXAuLi5cIilcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBwb3BVcC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgICAgIGNvbnRhaW5lci5pZCA9IFwiYmx1cnJlZFBvcFVwXCJcbiAgICAgICAgICAgIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BvcFVwJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgfSk7XG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0UG9wVXAnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PnthZGRUYXNrRnVuYyh0aXRsZS52YWx1ZSxkYXRlLnZhbHVlLDIpO30pO1xuXG4gICAgXG4gICAgXG4gICAgcmV0dXJuIHRoaXN3ZWVrUGFnZTtcbn0iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7IHRvZGF5VmlldywgcG9wVXAgYXMgcG9wVXBUb2RheSB9IGZyb20gJy4vdG9kYXl2aWV3LmpzJztcbmltcG9ydCB7IHRoaXN3ZWVrVmlldyxwb3BVcCBhcyBwb3BVcFRoaXNXZWVrIH0gZnJvbSAnLi90aGlzd2Vla3ZpZXcuanMnO1xuXG5jb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJyk7XG5cblxuLy9OYXZpZ2F0aW9uIGJhciBjb2RlXG5cbmNvbnN0IG5hdkJhckNsYXNzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbmNvbnN0IG5hdkJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25hdicpXG5jb25zdCBuYXZCYXJJdGVtcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJylcbmNvbnN0IG5hdkJhckl0ZW0xID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKVxuY29uc3QgbmF2QmFySXRlbTIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpXG5jb25zdCBuYXZCYXJJdGVtMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJylcbmNvbnN0IG5hdkJhclByb2plY3RzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKVxuY29uc3QgYWRkUHJvamVjdEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXG5jb25zdCBuYXZCYXJMaW5lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcblxuXG5jb250YWluZXIuYXBwZW5kQ2hpbGQobmF2QmFyQ2xhc3MpXG5uYXZCYXJDbGFzcy5hcHBlbmRDaGlsZChuYXZCYXIpXG5uYXZCYXIuYXBwZW5kQ2hpbGQobmF2QmFySXRlbXMpXG5uYXZCYXJJdGVtcy5hcHBlbmRDaGlsZChuYXZCYXJJdGVtMSlcbm5hdkJhckl0ZW1zLmFwcGVuZENoaWxkKG5hdkJhckl0ZW0yKVxubmF2QmFySXRlbXMuYXBwZW5kQ2hpbGQobmF2QmFySXRlbTMpXG5uYXZCYXIuYXBwZW5kQ2hpbGQobmF2QmFyTGluZSlcbm5hdkJhci5hcHBlbmRDaGlsZChuYXZCYXJQcm9qZWN0cylcbm5hdkJhclByb2plY3RzLmFwcGVuZENoaWxkKGFkZFByb2plY3RCdG4pXG5cblxubmF2QmFyQ2xhc3MuY2xhc3NMaXN0LmFkZCgnbmF2QmFyQ2xhc3MnKTtcbm5hdkJhckl0ZW1zLmNsYXNzTGlzdC5hZGQoJ2luaXRpYWxQcm9qZWN0cycpXG5uYXZCYXJQcm9qZWN0cy5jbGFzc0xpc3QuYWRkKCduYXZCYXJQcm9qZWN0cycpXG5hZGRQcm9qZWN0QnRuLmNsYXNzTGlzdC5hZGQoJ2FkZFByb2plY3QnKVxubmF2QmFyTGluZS5jbGFzc0xpc3QuYWRkKCduYXZCYXJMaW5lJylcbm5hdkJhckl0ZW0xLmNsYXNzTGlzdC5hZGQoJ3RvZGF5QnRuJylcblxuXG5cbm5hdkJhckl0ZW0xLnRleHRDb250ZW50ID0gXCJUb2RheVwiXG5uYXZCYXJJdGVtMi50ZXh0Q29udGVudCA9IFwiVGhpcyBXZWVrXCJcbm5hdkJhckl0ZW0zLnRleHRDb250ZW50ID0gXCJMYXRlclwiXG5cblxuYWRkUHJvamVjdEJ0bi50ZXh0Q29udGVudCA9IFwi4p6VIEFkZCBQcm9qZWN0XCJcblxuXG4vLyBUZXh0IENvZGVcblxuY29uc3QgcmlnaHRUZW1wbGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG5cblxuY29udGFpbmVyLmFwcGVuZENoaWxkKHJpZ2h0VGVtcGxhdGUpO1xuXG5cbnJpZ2h0VGVtcGxhdGUuY2xhc3NMaXN0LmFkZCgncmlnaHRUZW1wbGF0ZScpO1xuXG5uYXZCYXJJdGVtMS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9Pntwb3BVcFRvZGF5LnJlbW92ZSgpO3BvcFVwVGhpc1dlZWsucmVtb3ZlKCk7cmlnaHRUZW1wbGF0ZS5pbm5lckhUTUwgPSAnJztyaWdodFRlbXBsYXRlLmFwcGVuZENoaWxkKHRvZGF5VmlldygpKTt9KVxubmF2QmFySXRlbTIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57cG9wVXBUb2RheS5yZW1vdmUoKTtwb3BVcFRoaXNXZWVrLnJlbW92ZSgpO3JpZ2h0VGVtcGxhdGUuaW5uZXJIVE1MID0gJyc7cmlnaHRUZW1wbGF0ZS5hcHBlbmRDaGlsZCh0aGlzd2Vla1ZpZXcoKSl9KVxuXG5mdW5jdGlvbiBjbG9zZVRhYigpXG57XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvZGF5UGFnZScpLnJlbW92ZSgpO1xuICAgIC8vdGhpc3dlZWtWaWV3LnJlbW92ZSgpO1xufVxuXG5leHBvcnQge2NvbnRhaW5lcixyaWdodFRlbXBsYXRlfTsiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwiYWRkVGFza0YiLCJhZGRUYXNrIiwiYWRkVGl0bGUiLCJhZGREdWVEYXRlIiwiYWRkVGl0bGVOYW1lIiwiYWRkVGl0bGVJbnB1dCIsImFkZER1ZURhdGVOYW1lIiwiYWRkRHVlRGF0ZUlucHV0IiwiY2xhc3NMaXN0IiwiYWRkIiwidGV4dENvbnRlbnQiLCJ0YXNrc1RvZGF5IiwidGFza3NUaGlzV2VlayIsInRhc2tzIiwidGl0bGUiLCJkYXRlIiwiYWRkVGFza0Z1bmMiLCJ2aWV3IiwidGFza09iaiIsImNvbnNvbGUiLCJsb2ciLCJyaWdodFRlbXBsYXRlIiwidGFzayIsInRhc2tEZXYiLCJ0YXNrTmFtZSIsInRhc2tEdWVEYXRlIiwidGFza0NoZWNrZWQiLCJ2aWV3VGFzayIsImRpc3BsYXlUYXNrRnVuYyIsInBvcFVwIiwiY29udGFpbmVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJuYXZCYXJDbGFzcyIsIm5hdkJhciIsIm5hdkJhckl0ZW1zIiwibmF2QmFySXRlbTEiLCJuYXZCYXJJdGVtMiIsIm5hdkJhckl0ZW0zIiwibmF2QmFyUHJvamVjdHMiLCJhZGRQcm9qZWN0QnRuIiwibmF2QmFyTGluZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbm5lckhUTUwiLCJ0b2RheVBhZ2UiLCJhZGRUYXNrQnRuIiwicG9wVXBCdXR0b25zIiwiY2xvc2VQb3BVcCIsInN1Ym1pdFBvcFVwIiwiZGlzcGxheVRhc2tzIiwiYm9keSIsImRpc3BsYXkiLCJ2YWx1ZSIsImdlbmVyYXRlUG9wVXAiLCJ0b2RheVZpZXciLCJ0aGlzd2Vla1BhZ2UiLCJhZGRUYXNrQnRuVFYiLCJ0aGlzd2Vla1ZpZXciXSwic291cmNlUm9vdCI6IiJ9